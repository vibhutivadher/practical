{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","drag","ev","label_key","dataTransfer","setData","target","id","console","log","drop","block_id","preventDefault","dragableDivArr","getData","split","lable_id","parseInt","dropItem","state","filter","task","block","setState","extractData","data","val","newArr","push","allowDrop","label","sections","this","className","map","value","draggable","onDragStart","e","onDrop","onDragOver","length","Fragment","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59650e5c.chunk.js","sourcesContent":["import React, {Component} from 'react'; \nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state={\n        dropItem:[],\n        data:[\n          {\n            id:1,\n            label:\"Bathroom floor\"\n          },\n          {\n            id:2,\n            label:\"Full window clean\"\n          },\n          {\n            id:3,\n            label:\"Lounge chairs\"\n          },\n          {\n            id:4,\n            label:\"Dining room chairs\"\n          },\n          {\n            id:5,\n            label:\"High level cleaning\"\n          },\n          {\n            id:6,\n            label:\"Vacant room clean\"\n          },\n          {\n            id:7,\n            label:\"Carpet steam cleanning\"\n          },\n          {\n            id:8,\n            label:\"Celling fans cleanning\"\n          },\n          {\n            id:9,\n            label:\"Floor scrubbing\"\n          },\n          {\n            id:10,\n            label:\"Coutryard\"\n          },\n        ],\n        sections:[\n          {\n            id:1,\n            label:\"yearly\"\n          },\n          {\n            id:2,\n            label:\"half yearly\"\n          },\n          {\n            id:3,\n            label:\"3 times a year\"\n          },\n          {\n            id:4,\n            label:\"quarterly\"\n          },\n          {\n            id:5,\n            label:\"6 times a year\"\n          },\n          {\n            id:6,\n            label:\"as required\"\n          },\n          {\n            id:7,\n            label:\"hallways on rotation\"\n          },\n          {\n            id:8,\n            label:\"na\"\n          }\n        ]\n      }\n   }\n  drag = (ev,label_key) => {\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n    console.log(\"===>drag\",ev.target.id)\n  }\n  drop = (ev,block_id) => {\n    ev.preventDefault();\n    var draggable_id = ev.dataTransfer.getData(\"text\");\n    var dragableDivArr = draggable_id.split(\"-\");\n    var lable_id= parseInt(dragableDivArr[1],10)\n    console.log(\"block_id\",block_id)\n    if(dragableDivArr[0]===\"block\"){\n      let dropItem = this.state.dropItem.filter((task) => {  \n         if (task.block === lable_id && task.id === parseInt(dragableDivArr[2],10)) {\n           task.block = block_id;                \n         }\n         return task;\n      });\n      this.setState({...this.state,dropItem});\n    }else{\n      let dropItem = this.state.data.filter(val => val.id === lable_id)\n      var extractData = dropItem[0]\n      extractData['block']=block_id\n      // Update the arry\n      var newArr = this.state.dropItem\n      newArr.push(extractData)\n      console.log(\"newArr\",newArr)\n      //Remove the item from the existing array\n      let data = this.state.data.filter(val => val.id !== lable_id)\n      this.setState({dropItem:newArr,data:data});\n    }\n    \n  }\n  allowDrop = (ev) => {\n      ev.preventDefault();\n  }\n  render() {\n    const {data,sections,dropItem} = this.state\n    console.log(\"===>dropItem render\",dropItem)\n    return (\n      <div className=\"App\">\n        <div className=\"top-block\">\n            <div className=\"title\">\n              Periodicals\n            </div>\n            <div className=\"periodicals-block\">\n            {\n              data.map((value,label_key)=>\n                <div className=\"label-block\"\n                      key={label_key}\n                      draggable=\"true\"\n                      id={\"label-\"+value.id}\n                      onDragStart={(e)=>this.drag(e,label_key)}\n                >\n                {value.label}\n                </div>\n              )\n            }\n            </div>\n        </div>\n        <div className=\"bottom-block\">\n           <div className=\"title\">\n            Frequency\n          </div>\n          {\n            sections.map((value,block_id)=>\n              <div className={\"dropable-container \"+value.id} key={block_id}>\n                <div className=\"title\">\n                  {value.label}\n                </div>\n                  <div className=\"drop-here\"\n                    onDrop={(e)=>this.drop(e,value.id)}  \n                    onDragOver={this.allowDrop} \n                    id={\"block-\"+value.id}\n                  >\n                    {\n                      this.state.dropItem.length > 0 &&\n                      this.state.dropItem.map((data,label_key)=>\n                        <React.Fragment key={label_key}>\n                          {\n                              data.block === value.id &&\n                                <div className=\"label-block\"\n                                    key={label_key}\n                                    draggable=\"true\"\n                                    id={\"block-\"+data.block+\"-\"+data.id}\n                                    onDragStart={(e)=>this.drag(e,label_key)}\n                                >\n                                    {data.label}\n                                </div>\n                          }\n                        </React.Fragment>\n                      )\n                    }\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}