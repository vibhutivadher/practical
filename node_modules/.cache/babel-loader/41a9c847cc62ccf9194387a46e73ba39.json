{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vibhuti/demos/dragdrop/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.drag = (ev, label_key) => {\n      ev.dataTransfer.setData(\"text\", ev.target.id);\n      console.log(\"===>drag\", ev.target.id);\n    };\n\n    this.drop = (ev, block_id) => {\n      ev.preventDefault();\n      var draggable_id = ev.dataTransfer.getData(\"text\");\n      var dragableDivArr = draggable_id.split(\"-\");\n      var lable_id = parseInt(dragableDivArr[1], 10);\n      console.log(\"block_id\", block_id);\n\n      if (dragableDivArr[0] === \"block\") {\n        let dropItem = this.state.dropItem.filter(task => {\n          if (task.block === lable_id && task.id === parseInt(dragableDivArr[2], 10)) {\n            task.block = block_id;\n          }\n\n          return task;\n        });\n        this.setState({ ...this.state,\n          dropItem\n        });\n      } else {\n        let dropItem = this.state.data.filter(val => val.id === lable_id);\n        var extractData = dropItem[0];\n        extractData['block'] = block_id; // Update the arry\n\n        var newArr = this.state.dropItem;\n        newArr.push(extractData);\n        console.log(\"newArr\", newArr); //Remove the item from the existing array\n\n        let data = this.state.data.filter(val => val.id !== lable_id);\n        this.setState({\n          dropItem: newArr,\n          data: data\n        });\n      }\n    };\n\n    this.allowDrop = ev => {\n      ev.preventDefault();\n    };\n\n    this.state = {\n      dropItem: [],\n      data: [{\n        id: 1,\n        label: \"Bathroom floor\"\n      }, {\n        id: 2,\n        label: \"Full window clean\"\n      }, {\n        id: 3,\n        label: \"Lounge chairs\"\n      }, {\n        id: 4,\n        label: \"Dining room chairs\"\n      }, {\n        id: 5,\n        label: \"High level cleaning\"\n      }, {\n        id: 6,\n        label: \"Vacant room clean\"\n      }, {\n        id: 7,\n        label: \"Carpet steam cleanning\"\n      }, {\n        id: 8,\n        label: \"Celling fans cleanning\"\n      }, {\n        id: 9,\n        label: \"Floor scrubbing\"\n      }, {\n        id: 10,\n        label: \"Coutryard\"\n      }],\n      sections: [{\n        id: 1,\n        label: \"yearly\"\n      }, {\n        id: 2,\n        label: \"half yearly\"\n      }, {\n        id: 3,\n        label: \"3 times a year\"\n      }, {\n        id: 4,\n        label: \"quarterly\"\n      }, {\n        id: 5,\n        label: \"6 times a year\"\n      }, {\n        id: 6,\n        label: \"as required\"\n      }, {\n        id: 7,\n        label: \"hallways on rotation\"\n      }, {\n        id: 8,\n        label: \"na\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      data,\n      sections,\n      dropItem\n    } = this.state;\n    console.log(\"===>dropItem render\", dropItem);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Periodicals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"periodicals-block\",\n          children: data.map((value, label_key) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-block\",\n            draggable: \"true\",\n            id: \"label-\" + value.id,\n            onDragStart: e => this.drag(e, label_key),\n            children: value.label\n          }, label_key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Frequency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 12\n        }, this), sections.map((value, block_id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropable-container \" + value.id,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: value.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drop-here\",\n            onDrop: e => this.drop(e, value.id),\n            onDragOver: this.allowDrop,\n            id: \"block-\" + value.id,\n            children: this.state.dropItem.length > 0 && this.state.dropItem.map((data, label_key) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: data.block === value.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label-block\",\n                draggable: \"true\",\n                id: \"block-\" + data.block + \"-\" + data.id,\n                onDragStart: e => this.drag(e, label_key),\n                children: data.label\n              }, label_key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)\n            }, label_key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this)]\n        }, block_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/vibhuti/demos/dragdrop/src/App.js"],"names":["React","Component","App","constructor","props","drag","ev","label_key","dataTransfer","setData","target","id","console","log","drop","block_id","preventDefault","draggable_id","getData","dragableDivArr","split","lable_id","parseInt","dropItem","state","filter","task","block","setState","data","val","extractData","newArr","push","allowDrop","label","sections","render","map","value","e","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state={\n        dropItem:[],\n        data:[\n          {\n            id:1,\n            label:\"Bathroom floor\"\n          },\n          {\n            id:2,\n            label:\"Full window clean\"\n          },\n          {\n            id:3,\n            label:\"Lounge chairs\"\n          },\n          {\n            id:4,\n            label:\"Dining room chairs\"\n          },\n          {\n            id:5,\n            label:\"High level cleaning\"\n          },\n          {\n            id:6,\n            label:\"Vacant room clean\"\n          },\n          {\n            id:7,\n            label:\"Carpet steam cleanning\"\n          },\n          {\n            id:8,\n            label:\"Celling fans cleanning\"\n          },\n          {\n            id:9,\n            label:\"Floor scrubbing\"\n          },\n          {\n            id:10,\n            label:\"Coutryard\"\n          },\n        ],\n        sections:[\n          {\n            id:1,\n            label:\"yearly\"\n          },\n          {\n            id:2,\n            label:\"half yearly\"\n          },\n          {\n            id:3,\n            label:\"3 times a year\"\n          },\n          {\n            id:4,\n            label:\"quarterly\"\n          },\n          {\n            id:5,\n            label:\"6 times a year\"\n          },\n          {\n            id:6,\n            label:\"as required\"\n          },\n          {\n            id:7,\n            label:\"hallways on rotation\"\n          },\n          {\n            id:8,\n            label:\"na\"\n          }\n        ]\n      }\n   }\n  drag = (ev,label_key) => {\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n    console.log(\"===>drag\",ev.target.id)\n  }\n  drop = (ev,block_id) => {\n    ev.preventDefault();\n    var draggable_id = ev.dataTransfer.getData(\"text\");\n    var dragableDivArr = draggable_id.split(\"-\");\n    var lable_id= parseInt(dragableDivArr[1],10)\n    console.log(\"block_id\",block_id)\n    if(dragableDivArr[0]===\"block\"){\n      let dropItem = this.state.dropItem.filter((task) => {  \n         if (task.block === lable_id && task.id === parseInt(dragableDivArr[2],10)) {\n           task.block = block_id;                \n         }\n         return task;\n      });\n      this.setState({...this.state,dropItem});\n    }else{\n      let dropItem = this.state.data.filter(val => val.id === lable_id)\n      var extractData = dropItem[0]\n      extractData['block']=block_id\n      // Update the arry\n      var newArr = this.state.dropItem\n      newArr.push(extractData)\n      console.log(\"newArr\",newArr)\n      //Remove the item from the existing array\n      let data = this.state.data.filter(val => val.id !== lable_id)\n      this.setState({dropItem:newArr,data:data});\n    }\n    \n  }\n  allowDrop = (ev) => {\n      ev.preventDefault();\n  }\n  render() {\n    const {data,sections,dropItem} = this.state\n    console.log(\"===>dropItem render\",dropItem)\n    return (\n      <div className=\"App\">\n        <div className=\"top-block\">\n            <div className=\"title\">\n              Periodicals\n            </div>\n            <div className=\"periodicals-block\">\n            {\n              data.map((value,label_key)=>\n                <div className=\"label-block\"\n                      key={label_key}\n                      draggable=\"true\"\n                      id={\"label-\"+value.id}\n                      onDragStart={(e)=>this.drag(e,label_key)}\n                >\n                {value.label}\n                </div>\n              )\n            }\n            </div>\n        </div>\n        <div className=\"bottom-block\">\n           <div className=\"title\">\n            Frequency\n          </div>\n          {\n            sections.map((value,block_id)=>\n              <div className={\"dropable-container \"+value.id} key={block_id}>\n                <div className=\"title\">\n                  {value.label}\n                </div>\n                  <div className=\"drop-here\"\n                    onDrop={(e)=>this.drop(e,value.id)}  \n                    onDragOver={this.allowDrop} \n                    id={\"block-\"+value.id}\n                  >\n                    {\n                      this.state.dropItem.length > 0 &&\n                      this.state.dropItem.map((data,label_key)=>\n                        <React.Fragment key={label_key}>\n                          {\n                              data.block === value.id &&\n                                <div className=\"label-block\"\n                                    key={label_key}\n                                    draggable=\"true\"\n                                    id={\"block-\"+data.block+\"-\"+data.id}\n                                    onDragStart={(e)=>this.drag(e,label_key)}\n                                >\n                                    {data.label}\n                                </div>\n                          }\n                        </React.Fragment>\n                      )\n                    }\n                </div>\n              </div>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}